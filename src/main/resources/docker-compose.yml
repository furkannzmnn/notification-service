version: '3'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.4.2
    environment:
      - bootstrap.system_call_filter=false
      - ES_JAVA_OPTS="-Xms1g -Xmx1g"
      - discovery.type=single-node
      - transport.host= elasticsearch
      - xpack.security.enabled=false

    volumes:
      - ./data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper

    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

    networks:
      - my-network

  broker:
      image: confluentinc/cp-kafka:7.0.1
      container_name: broker
      ports:
        - "9092:9092"
      depends_on:
        - zookeeper
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        kafka.bootstrap.servers: broker:9092
        GROUP_ID: group_id

      networks:
        - my-network


  kafka-ui:
      image: provectuslabs/kafka-ui
      container_name: kafka-ui
      ports:
        - "8080:8080"
      restart: always
      environment:
        - KAFKA_CLUSTERS_0_NAME=broker
        - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:29092
        - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
        - KAFKA_CLUSTERS_0_READONLY=true

      networks:
        - my-network

networks:
  my-network:
